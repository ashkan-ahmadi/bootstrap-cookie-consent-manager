/*!
 * Cookie Consent Manager v2.0.0
 * https://github.com/ashkan-ahmadi/bootstrap-cookie-consent-manager
 * 
 * Licensed under MIT
 */
export default class cookieConsentManager{constructor(e,t){this.PREFIX="cookieConsent_",this.CONSENT_TYPE_PREFIX=this.PREFIX+"consentType_",this.SET_NAME=this.PREFIX+"isSet",this.SET_POSITIVE_VALUE="true",this.SET_NEGATIVE_VALUE="false",this.VERSION=2,this.VERSION_NAME=this.PREFIX+"version",this.defaultConsentTypes=[],this.userConsentTypes=e,this.defaultConfigs={cookieConsentAcceptEventName:"cookie_consent_accept",cookieConsentRejectEventName:"cookie_consent_reject",cookieConsentUpdateEventName:"cookie_consent_update",modalId:"cookie-consent-manager-modal",modalTitle:"Customize the cookies",centered:!0,scrollable:!0,animation:!0,staticBackground:!0,showCloseButtonOnModal:!1,useLocalStorage:!0,acceptAllButtonText:"Accept all",acceptAllButtonAccessibleText:"Accept all cookies",rejectAllButtonText:"Reject all",rejectAllButtonAccessibleText:"Reject all cookies",customizeButtonText:"Customize",customizeButtonAccessibleText:"Customize cookies",saveButtonText:"Save",saveButtonAccessibleText:"Save preferences",bannerTitle:"We respect your privacy",bannerText:'We use cookies on our site to enhance your user experience, provide personalized content, and analyze our traffic. You can find more information on our <a href="/cookie-policy">Cookie Policy</a>.',showRejectAllButtonOnBanner:!0},this.userConfigs=t,this.banner=null,this.modal=null}init(){this.bootstrapExists()?(this.setConsent_default(),this.isConsentSet()?(this.verifyVersionFromLocalStorage()||console.warn("There is a version mismatch between the current version of the Cookie Consent Manager library and what's stored in the localStorage"),this.updateConsent_fromLocalStorage(),this.fireCookieConsentUpdateEvent(),this.fireCookieConsentIndividualEvents()):this.showBanner()):console.error("BOOTSTRAP COOKIE CONSENT MANAGER: Bootstrap JS is not found. Make sure Bootstrap JS is loaded BEFORE loading this script. For more information, visit https://github.com/ashkan-ahmadi/bootstrap-cookie-consent-manager")}getPrefix(){return this.PREFIX}getConsentTypePrefix(){return this.CONSENT_TYPE_PREFIX}getConsentSetName(){return this.SET_NAME}getConsentSetValue(){return this.SET_POSITIVE_VALUE}getConsentSetPositiveValue(){return this.SET_POSITIVE_VALUE}getConsentSetNegativeValue(){return this.SET_NEGATIVE_VALUE}getVersion(){return this.VERSION}getVersionName(){return this.VERSION_NAME}getDefaultConsentTypes(){return this.defaultConsentTypes}getUserConsentTypes(){return this.userConsentTypes}getConsentTypes(){return[...this.getDefaultConsentTypes(),...this.getUserConsentTypes()]}getEnabledConsentTypes(){const e=this.getConsentTypes();if(!e)return;return e.filter((e=>!1!==e.enabled))}getRequiredConsentTypes(){const e=this.getConsentTypes();if(!e)return;return e.filter((e=>!0===e.required))}isConsentSet(){const e=this.getConsentSetName(),t=this.getConsentSetValue();try{const n=this.getConfigs();if(!n?.useCookieInsteadOfLocalStorage){return localStorage.getItem(e)===t}console.log("You are opting to use cookies instead of local storage")}catch(e){console.error(e)}}setConsent_acceptAll(){try{const e=this.getEnabledConsentTypes();if(!e||0===e?.length)return;e.forEach((e=>{if(void 0===e.id||!e?.id)return void console.warn('Consent type required an "id" property but either it was not provided, or it\'s empty. This type was skipped completely and nothing was set for this type.');const t=this.getConsentTypePrefix()+e?.id,n=this.SET_POSITIVE_VALUE;localStorage.setItem(t,n),e.onAccept&&"function"==typeof e.onAccept?e.onAccept():e.onAccept&&"function"!=typeof e.onAccept&&console.warn(`Property onAccept on cookie consent type with id "${e.id}" expected a function but received a ${typeof e.onAccept}. Review and make sure you pass a function if you want a callback to run on accepting this cookie consent type.`)})),this.setConsentSet(),this.setVersion()}catch(e){console.error("There was an error with setConsent_acceptAll()"),console.error(e)}}setConsent_rejectAll(){try{const e=this.getEnabledConsentTypes();if(!e||0===e?.length)return void console.warn("requiredConsentTypes is null or empty. If this is intentional, you can ignore this warning.");e.forEach((e=>{if(void 0===e.id||!e?.id)return void console.warn('Consent type required an "id" property but either it was not provided, or it\'s empty. This type was skipped completely and nothing was set for this type.');const t=this.getConsentTypePrefix()+e?.id,n=e?.required?this.SET_POSITIVE_VALUE:this.SET_NEGATIVE_VALUE;localStorage.setItem(t,n),!0!==e.required&&(e.onReject&&"function"==typeof e.onReject?e.onReject():e.onReject&&"function"!=typeof e.onReject&&console.warn(`Property onReject on cookie consent type with id "${e.id}" expected a function but received a ${typeof e.onReject}. Review and make sure you pass a function if you want a callback to run on accepting this cookie consent type.`))})),this.setConsentSet(),this.setVersion()}catch(e){console.error("There was an error with setConsent_acceptAll()"),console.error(e)}}setConsent_saveCustomized(){const e=this.getConfigs(),{modalId:t}=e||{};try{const e=document.querySelector(`#${t}`);if(!e)return void console.warn("modal in setConsent_saveCustomized is empty.");const n=e.querySelectorAll("input.form-check-input");if(!n||0===n.length)return void console.warn("checkboxes in setConsent_saveCustomized is empty.");n.forEach((e=>{const t=this.getConsentTypePrefix()+e?.id,n=e?.checked?this.SET_POSITIVE_VALUE:this.SET_NEGATIVE_VALUE;localStorage.setItem(t,n)})),this.setConsentSet(),this.setVersion()}catch(e){console.error("There was an error with setConsent_saveCustomized()"),console.error(e)}}setConsentSet(){const e=this.getConsentSetName(),t=this.getConsentSetPositiveValue();localStorage.setItem(e,t)}getDefaultConfigs(){return this.defaultConfigs}getUserConfigs(){return this.userConfigs}getConfigs(){return{...this.getDefaultConfigs(),...this.getUserConfigs()}}createBannerHTML(){const e=this.getConfigs(),{bannerTitle:t,bannerText:n,acceptAllButtonText:o,acceptAllButtonAccessibleText:s,rejectAllButtonText:i,rejectAllButtonAccessibleText:a,customizeButtonText:r,customizeButtonAccessibleText:c,showRejectAllButtonOnBanner:l}=e||{},d=o!==s,u=i!==a,h=r!==c,p=document.createElement("div");p.setAttribute("id","cookie-consent-manager");const g=document.createElement("div");g.classList.add("position-fixed","top-0","bottom-0","start-0","end-0","bg-dark","opacity-50","z-1"),g.setAttribute("id","cookie-consent-manager-backdrop");const m=document.createElement("div");return m.classList.add("position-fixed","bottom-0","start-0","p-3","w-100","border-top","bg-body-tertiary","z-2"),m.setAttribute("id","cookie-consent-manager-banner"),m.innerHTML=`\n      <div class="container">\n        <div class="row g-3 g-md-4 g-xl-5">\n          <div class="col-12 col-md-8 col-xl-9">\n            <p class="fw-bold mb-1">${t}</p>\n            <p class="mb-0">${n}</p>\n          </div>\n          <div class="col">\n            <div class="row xxl-block flex-column g-1">\n              <button \n                type="button" \n                class="btn btn-primary" \n                data-cookie-button-function="accept-all-cookies" \n                ${d?`aria-label="${s}"`:""}\n                >\n                ${o}\n              </button>\n              ${l?`\n                <button \n                  type="button" \n                  class="btn btn-outline-primary" \n                  data-cookie-button-function="reject-all-cookies" \n                  ${u?`aria-label="${a}"`:""}\n                  >\n                  ${i}\n                </button>\n                `:""}\n              <button \n                type="button" \n                class="btn btn-outline-primary" \n                data-cookie-button-function="customize-cookies" \n                ${h?`aria-label="${c}"`:""}\n                >\n                ${r}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `,p.append(g),p.appendChild(m),p}showBanner(){null!==this.banner&&(this.banner.remove(),this.banner=null),this.banner=this.createBannerHTML(),document.body.append(this.banner);const e=this.banner.querySelector('[data-cookie-button-function="accept-all-cookies"]'),t=this.banner.querySelector('[data-cookie-button-function="reject-all-cookies"]'),n=this.banner.querySelector('[data-cookie-button-function="customize-cookies"]');e?.addEventListener("click",(()=>this.handleAcceptAllButtonClick())),t?.addEventListener("click",(()=>this.handleRejectAllButtonClick())),n?.addEventListener("click",(()=>this.handleCustomizeButtonClick()))}createModalHTML(){null!==this.modal&&(this.modal.remove(),this.modal=null);const e=this.getEnabledConsentTypes(),t=this.getConfigs(),{modalId:n,modalTitle:o,centered:s,scrollable:i,animation:a,staticBackground:r,acceptAllButtonText:c,acceptAllButtonAccessibleText:l,rejectAllButtonText:d,rejectAllButtonAccessibleText:u,saveButtonText:h,saveButtonAccessibleText:p}=t||{},g=c!==l,m=d!==u,C=h!==p,b=[];return s&&b.push("modal-dialog-centered"),i&&b.push("modal-dialog-scrollable"),this.modal=document.createElement("div"),this.modal.innerHTML=`\n      <div class="modal ${a?"fade":""}" tabindex="-1" ${r?'data-bs-backdrop="static"':""} id="${n}">\n        <div class="modal-dialog ${b.join(" ")}">\n          <div class="modal-content">\n            <div class="modal-header bg-body-tertiary">\n              <p class="modal-title fw-bolder">${o}</p>\n              ${this.showCloseButtonOnModal?'<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>':""}\n            </div>\n            <div class="modal-body">\n              ${e.map((e=>{const{id:t,title:n,description:o,required:s,onByDefault:i}=e||{};return`\n                  <div class="cookie-consent-type">\n                    <div class="d-flex gap-3">\n                      <div class="flex-grow-1">\n                        <p class="fw-bold m-0">${n}</p>\n                      </div>\n                      <div class="form-check form-switch">\n                        <input\n                          class="form-check-input"\n                          type="checkbox"\n                          name="${t}"\n                          id="${t}"\n                          role="switch"\n                          ${i?"checked":""} \n                          ${s?"disabled":""}\n                        >\n                        <label\n                        class="form-check-label visually-hidden"\n                        for="${t}">ON</label>\n                      </div>\n                    </div>\n                    <p class="m-0 small">${o}</p>\n                  </div>\n                  `})).join('<hr class="p-0 my-3">')}\n            </div> \x3c!-- .modal-body --\x3e\n\n            <div class="modal-footer">\n              <div class="d-grid gap-2 col-12 mx-auto d-sm-block text-sm-end">\n                <button\n                  type="button" \n                  class="btn btn-outline-primary me-sm-2" \n                  data-bs-dismiss="modal" \n                  data-cookie-button-function="accept-all-cookies"\n                  ${g?`aria-label="${l}"`:""}\n                >\n                  ${c}\n                </button>\n\n                <button\n                  type="button" \n                  class="btn btn-outline-primary me-sm-2" \n                  data-bs-dismiss="modal" \n                  data-cookie-button-function="reject-all-cookies"\n                  ${m?`aria-label="${u}"`:""}\n                >\n                  ${d}\n                </button>\n                \n                <button\n                  type="button" \n                  class="btn btn-primary" \n                  data-bs-dismiss="modal" \n                  data-cookie-button-function="save-cookies"\n                  ${C?`aria-label="${p}"`:""}\n                >\n                  ${h}\n                </button>\n              </div>\n            </div> \x3c!-- .modal-footer --\x3e\n          </div>\n        </div>\n      </div>\n    `,this.modal}showModal(){const e=this.getConfigs(),{modalId:t}=e||{};this.modal=this.createModalHTML();const n=this.modal.querySelector('[data-cookie-button-function="accept-all-cookies"]'),o=this.modal.querySelector('[data-cookie-button-function="reject-all-cookies"]'),s=this.modal.querySelector('[data-cookie-button-function="save-cookies"]');n?.addEventListener("click",(()=>this.handleAcceptAllButtonClick())),o?.addEventListener("click",(()=>this.handleRejectAllButtonClick())),s?.addEventListener("click",(()=>this.handleSaveButtonClick()));new bootstrap.Modal(this.modal.querySelector(`#${t}`)).show()}bootstrapExists(){return"undefined"!=typeof bootstrap}pushToDataLayer(e){window.dataLayer=window.dataLayer||[],window.dataLayer.push(e)}gtag(){window.dataLayer=window?.dataLayer||[],dataLayer.push(arguments)}getVersionFromLocalStorage(){const e=this.getVersionName();return localStorage.getItem(e)}verifyVersionFromLocalStorage(){const e=this.getVersion(),t=this.getVersionFromLocalStorage();return Number(t)===Number(e)}setVersion(){const e=this.getVersionName(),t=this.getVersion();localStorage.setItem(e,t)}getCookieConsentAcceptEventName(){const e=this.getConfigs(),{cookieConsentAcceptEventName:t}=e||{};return t||console.warn("cookieConsentAcceptEventName in getCookieConsentAcceptEventName is empty"),t}getCookieConsentRejectEventName(){const e=this.getConfigs(),{cookieConsentRejectEventName:t}=e||{};return t||console.warn("cookieConsentRejectEventName in getCookieConsentRejectEventName is empty"),t}fireCookieConsentUpdateEvent(){const e=this.getConfigs(),{cookieConsentUpdateEventName:t}=e||{};t?this.pushToDataLayer({event:t}):console.warn("cookieConsentUpdateEventName in fireCookieConsentUpdateEvent is empty. No event pushed to dataLayer")}fireCookieConsentIndividualEvents(){const e=this.getConsentTypePrefix();this.getEnabledConsentTypes().forEach((t=>{const n=e+t.id,o=this.getCookieConsentAcceptEventName(),s=this.getCookieConsentRejectEventName(),i=localStorage.getItem(n)===this.SET_POSITIVE_VALUE?o:s;this.pushToDataLayer({event:i+"_"+t?.id})}))}setConsent_default(){console.log("setting consent to default all denied"),this.gtag("consent","default",{functionality_storage:"granted",security_storage:"granted",analytics_storage:"denied",ad_storage:"denied",ad_user_data:"denied",ad_personalization:"denied",personalization_storage:"denied"})}updateConsent_allGranted(){this.gtag("consent","update",{ad_personalization:"granted",ad_storage:"granted",ad_user_data:"granted",analytics_storage:"granted",functionality_storage:"granted",personalization_storage:"granted",security_storage:"granted"})}updateConsent_allDenied(){this.gtag("consent","update",{ad_personalization:"denied",ad_storage:"denied",ad_user_data:"denied",analytics_storage:"denied",functionality_storage:"granted",personalization_storage:"denied",security_storage:"granted"})}updateConsent_fromLocalStorage(){const e=this.getConsentTypePrefix(),t=this.getEnabledConsentTypes(),n={};t.forEach((t=>{const o=e+t.id;switch(t.permissionType){case"ad":n.ad_personalization=localStorage.getItem(o)===this.SET_POSITIVE_VALUE?"granted":"denied",n.ad_storage=localStorage.getItem(o)===this.SET_POSITIVE_VALUE?"granted":"denied",n.ad_user_data=localStorage.getItem(o)===this.SET_POSITIVE_VALUE?"granted":"denied";break;case"analytics":n.analytics_storage=localStorage.getItem(o)===this.SET_POSITIVE_VALUE?"granted":"denied";break;case"functionality":n.functionality_storage=localStorage.getItem(o)===this.SET_POSITIVE_VALUE?"granted":"denied";break;case"personalization":n.personalization_storage=localStorage.getItem(o)===this.SET_POSITIVE_VALUE?"granted":"denied";break;case"security":n.security_storage=localStorage.getItem(o)===this.SET_POSITIVE_VALUE?"granted":"denied"}})),this.gtag("consent","update",n)}handleAcceptAllButtonClick(){try{this.setConsent_acceptAll(),this.banner&&(this.banner.remove(),this.banner=null),this.updateConsent_allGranted(),this.fireCookieConsentUpdateEvent(),this.fireCookieConsentIndividualEvents()}catch(e){console.error("There was an error with handleAcceptAllButtonClick()"),console.error(e)}}handleRejectAllButtonClick(){try{this.setConsent_rejectAll(),this.banner&&(this.banner.remove(),this.banner=null),this.updateConsent_allDenied(),this.fireCookieConsentUpdateEvent(),this.fireCookieConsentIndividualEvents()}catch(e){console.error("There was an error with handleRejectAllButtonClick()"),console.error(e)}}handleSaveButtonClick(){try{this.setConsent_saveCustomized(),this.updateConsent_fromLocalStorage(),this.fireCookieConsentUpdateEvent(),this.fireCookieConsentIndividualEvents()}catch(e){console.error("There was an error with handleSaveButtonClick()"),console.error(e)}}handleCustomizeButtonClick(){try{this.banner&&(this.banner.remove(),this.banner=null),this.showModal()}catch(e){console.error("There was an issue with callback function of handleCustomizeButtonClick()"),console.error(e)}}}