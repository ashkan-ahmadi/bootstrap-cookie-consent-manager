class cookieConsentManager{constructor(e,t){this.defaultConsentTypes=[],this.userConsentTypes=e,this.defaultConfigs={prefix:"cookieConsent",consentTypePrefix:"consentType",setName:"isSet",positiveValue:"true",negativeValue:"false",versionName:"version",version:2.2,cookieConsentAcceptEventName:"cookie_consent_accept",cookieConsentRejectEventName:"cookie_consent_reject",cookieConsentUpdateEventName:"cookie_consent_update",modalId:"cookie-consent-manager-modal",modalTitle:"Customize the cookies",centered:!0,scrollable:!0,animation:!0,staticBackground:!0,showCloseButtonOnModal:!1,useLocalStorage:!0,acceptAllButtonText:"Accept all",acceptAllButtonAccessibleText:"Accept all cookies",rejectAllButtonText:"Reject all",rejectAllButtonAccessibleText:"Reject all cookies",customizeButtonText:"Customize",customizeButtonAccessibleText:"Customize cookies",saveButtonText:"Save",saveButtonAccessibleText:"Save preferences",bannerTitle:"We respect your privacy",bannerText:'We use cookies on our site to enhance your user experience, provide personalized content, and analyze our traffic. You can find more information on our <a href="/cookie-policy">Cookie Policy</a>.',showRejectAllButtonOnBanner:!0,freezeScrollingOnBanner:!0,showToast:!0,toastText:"Cookie consent saved successfully",toastPosition:"bottom-left",toastContainerId:"toast-container",toastId:"toast-"+Date.now(),toastBackgroundClass:"text-bg-success",toastShowCloseButton:!0,toastEscapeHTML:!0,toastAnimation:!0,toastAutohide:!1,toastDelay:3500},this.userConfigs=t,this.banner=null,this.modal=null}init(){this.bootstrapExists()?(this.setConsent_default(),this.isConsentSet()?(this.verifyVersionFromLocalStorage()||console.warn("There is a version mismatch between the current version of the Cookie Consent Manager library and what's stored in the localStorage. It's recommended to update the Cookie Consent Manager library: https://github.com/ashkan-ahmadi/bootstrap-cookie-consent-manager"),this.updateConsent_fromLocalStorage(),this.fireCookieConsentUpdateEvent(),this.fireCookieConsentIndividualEvents()):this.showBanner()):console.error("BOOTSTRAP COOKIE CONSENT MANAGER: Bootstrap JS is not found. Make sure Bootstrap JS is loaded BEFORE loading this script. For more information, visit https://github.com/ashkan-ahmadi/bootstrap-cookie-consent-manager")}getPrefix(){const e=this.getConfigs(),{prefix:t}=e||{};return t||console.warn("The 'prefix' value is not found or it's empty. Make sure you pass a prefix value (or remove to set the default value)"),t+"_"}getConsentTypePrefix(){const e=this.getPrefix(),t=this.getConfigs(),{consentTypePrefix:o}=t||{};return o||console.warn("The 'consentTypePrefix' value is not found or it's empty. Make sure you pass a consentTypePrefix value (or remove to set the default value)"),e+o+"_"}getConsentSetName(){const e=this.getPrefix(),t=this.getConfigs(),{setName:o}=t||{};return o||console.warn("The 'setName' value is not found or it's empty. Make sure you pass a setName value (or remove to set the default value)"),e+o}getPositiveValue(){const e=this.getConfigs(),{positiveValue:t}=e||{};return t||console.warn("The 'positiveValue' value is not found or it's empty. Make sure you pass a positiveValue value (or remove to set the default value)"),t}getNegativeValue(){const e=this.getConfigs(),{negativeValue:t}=e||{};return t||console.warn("The 'negativeValue' value is not found or it's empty. Make sure you pass a negativeValue value (or remove to set the default value)"),t}getVersion(){const e=this.getConfigs(),{version:t}=e||{};return t||console.warn("The 'version' value is not found or it's empty. Make sure you pass a version value (or remove to set the default value)"),t}getVersionName(){const e=this.getPrefix(),t=this.getConfigs(),{versionName:o}=t||{};return o||console.warn("The 'versionName' value is not found or it's empty. Make sure you pass a versionName value (or remove to set the default value)"),e+o}getDefaultConsentTypes(){return this.defaultConsentTypes}getUserConsentTypes(){return this.userConsentTypes}getConsentTypes(){return[...this.getDefaultConsentTypes(),...this.getUserConsentTypes()]}getEnabledConsentTypes(){const e=this.getConsentTypes();if(!e)return;return e.filter((e=>!1!==e.enabled))}getRequiredConsentTypes(){const e=this.getConsentTypes();if(!e)return;return e.filter((e=>!0===e.required))}isConsentSet(){const e=this.getConsentSetName(),t=this.getPositiveValue();try{const o=this.getConfigs();if(o?.useLocalStorage){return localStorage.getItem(e)===t}console.log("You are opting to use cookies instead of local storage")}catch(e){console.error(e)}}setConsent_acceptAll(){try{const e=this.getEnabledConsentTypes();if(!e||0===e?.length)return;e.forEach((e=>{if(void 0===e.id||!e?.id)return void console.warn('Consent type required an "id" property but either it was not provided, or it\'s empty. This type was skipped completely and nothing was set for this type.');const t=this.getConsentTypePrefix()+e?.id,o=this.getPositiveValue();localStorage.setItem(t,o),e.onAccept&&("function"==typeof e.onAccept?e.onAccept():console.warn(`Property onAccept on cookie consent type with id "${e.id}" expected a function but received a ${typeof e.onAccept}. Review and make sure you pass a function if you want a callback to run on accepting this cookie consent type.`))})),this.setConsentSet(),this.setVersion()}catch(e){console.error("There was an error with setConsent_acceptAll()"),console.error(e)}}setConsent_rejectAll(){try{const e=this.getEnabledConsentTypes();if(!e||0===e?.length)return void console.warn("requiredConsentTypes is null or empty. If this is intentional, you can ignore this warning.");e.forEach((e=>{if(void 0===e.id||!e?.id)return void console.warn('Consent type required an "id" property but either it was not provided, or it\'s empty. This type was skipped completely and nothing was set for this type.');const t=this.getConsentTypePrefix(),o=this.getPositiveValue(),n=this.getNegativeValue(),s=t+e?.id,a=e?.required?o:n;localStorage.setItem(s,a),!0!==e.required?e.onReject&&("function"==typeof e.onReject?e.onReject():console.warn(`Property onReject on cookie consent type with id "${e.id}" expected a function but received a ${typeof e.onReject}. Review and make sure you pass a function if you want a callback to run on accepting this cookie consent type.`)):e.onAccept&&("function"==typeof e.onAccept?e.onAccept():console.warn(`Property onAccept on cookie consent type with id "${e.id}" expected a function but received a ${typeof e.onAccept}. Review and make sure you pass a function if you want a callback to run on accepting this cookie consent type.`))})),this.setConsentSet(),this.setVersion()}catch(e){console.error("There was an error with setConsent_acceptAll()"),console.error(e)}}setConsent_saveCustomized(){const e=this.getConfigs(),{modalId:t}=e||{};try{const e=document.querySelector(`#${t}`);if(!e)return void console.warn("modal in setConsent_saveCustomized is empty.");const o=e.querySelectorAll("input.form-check-input");if(!o||0===o.length)return void console.warn("checkboxes in setConsent_saveCustomized is empty.");const n=this.getEnabledConsentTypes();o.forEach((e=>{const t=this.getConsentTypePrefix(),o=e?.id,s=e?.checked,a=t+o,i=s?this.getPositiveValue():this.getNegativeValue();localStorage.setItem(a,i);const r=n.find((e=>e.id===o));if(r)if(s){const e=r.onAccept;e&&"function"==typeof e&&e()}else{const e=r.onReject;e&&"function"==typeof e&&e()}})),this.setConsentSet(),this.setVersion()}catch(e){console.error("There was an error with setConsent_saveCustomized()"),console.error(e)}}setConsentSet(){const e=this.getConsentSetName(),t=this.getPositiveValue();localStorage.setItem(e,t)}getDefaultConfigs(){return this.defaultConfigs}getUserConfigs(){return this.userConfigs}getConfigs(){return{...this.getDefaultConfigs(),...this.getUserConfigs()}}createBannerHTML(){const e=this.getConfigs(),{bannerTitle:t,bannerText:o,acceptAllButtonText:n,acceptAllButtonAccessibleText:s,rejectAllButtonText:a,rejectAllButtonAccessibleText:i,customizeButtonText:r,customizeButtonAccessibleText:c,showRejectAllButtonOnBanner:l}=e||{},d=n!==s,u=a!==i,h=r!==c,p=document.createElement("div");p.setAttribute("id","cookie-consent-manager");const g=document.createElement("div");g.classList.add("position-fixed","top-0","bottom-0","start-0","end-0","bg-dark","opacity-50","z-1"),g.setAttribute("id","cookie-consent-manager-backdrop");const m=document.createElement("div");return m.classList.add("position-fixed","bottom-0","start-0","p-3","w-100","border-top","bg-body-tertiary","z-2"),m.setAttribute("id","cookie-consent-manager-banner"),m.innerHTML=`\n      <div class="container">\n        <div class="row g-3 g-md-4 g-xl-5">\n          <div class="col-12 col-md-8 col-xl-9">\n            <p class="fw-bold mb-1">${t}</p>\n            <p class="mb-0">${o}</p>\n          </div>\n          <div class="col">\n            <div class="row xxl-block flex-column g-1">\n              <button \n                type="button" \n                class="btn btn-primary" \n                data-cookie-button-function="accept-all-cookies" \n                ${d?`aria-label="${s}"`:""}\n                >\n                ${n}\n              </button>\n              ${l?`\n                <button \n                  type="button" \n                  class="btn btn-outline-primary" \n                  data-cookie-button-function="reject-all-cookies" \n                  ${u?`aria-label="${i}"`:""}\n                  >\n                  ${a}\n                </button>\n                `:""}\n              <button \n                type="button" \n                class="btn btn-outline-primary" \n                data-cookie-button-function="customize-cookies" \n                ${h?`aria-label="${c}"`:""}\n                >\n                ${r}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `,p.append(g),p.appendChild(m),p}showBanner(){null!==this.banner&&(this.banner.remove(),this.banner=null),this.banner=this.createBannerHTML(),document.body.append(this.banner);const e=this.banner.querySelector('[data-cookie-button-function="accept-all-cookies"]'),t=this.banner.querySelector('[data-cookie-button-function="reject-all-cookies"]'),o=this.banner.querySelector('[data-cookie-button-function="customize-cookies"]');e?.addEventListener("click",(()=>this.handleAcceptAllButtonClick())),t?.addEventListener("click",(()=>this.handleRejectAllButtonClick())),o?.addEventListener("click",(()=>this.handleCustomizeButtonClick())),this.disableScrollingonBody()}createModalHTML(){null!==this.modal&&(this.modal.remove(),this.modal=null);const e=this.getEnabledConsentTypes(),t=this.getConfigs(),{modalId:o,modalTitle:n,centered:s,scrollable:a,animation:i,staticBackground:r,acceptAllButtonText:c,acceptAllButtonAccessibleText:l,rejectAllButtonText:d,rejectAllButtonAccessibleText:u,saveButtonText:h,saveButtonAccessibleText:p}=t||{},g=c!==l,m=d!==u,b=h!==p,f=[];return s&&f.push("modal-dialog-centered"),a&&f.push("modal-dialog-scrollable"),this.modal=document.createElement("div"),this.modal.innerHTML=`\n      <div class="modal ${i?"fade":""}" tabindex="-1" ${r?'data-bs-backdrop="static"':""} id="${o}">\n        <div class="modal-dialog ${f.join(" ")}">\n          <div class="modal-content">\n            <div class="modal-header bg-body-tertiary">\n              <p class="modal-title fw-bolder">${n}</p>\n              ${this.showCloseButtonOnModal?'<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>':""}\n            </div>\n            <div class="modal-body">\n              ${e.map((e=>{const{id:t,title:o,description:n,required:s,onByDefault:a}=e||{};return`\n                  <div class="cookie-consent-type">\n                    <div class="d-flex gap-3">\n                      <div class="flex-grow-1">\n                        <p class="fw-bold m-0">${o}</p>\n                      </div>\n                      <div class="form-check form-switch">\n                        <input\n                          class="form-check-input"\n                          type="checkbox"\n                          name="${t}"\n                          id="${t}"\n                          role="switch"\n                          ${a?"checked":""} \n                          ${s?"disabled":""}\n                        >\n                        <label\n                        class="form-check-label visually-hidden"\n                        for="${t}">ON</label>\n                      </div>\n                    </div>\n                    <p class="m-0 small">${n}</p>\n                  </div>\n                  `})).join('<hr class="p-0 my-3">')}\n            </div> \x3c!-- .modal-body --\x3e\n\n            <div class="modal-footer">\n              <div class="d-grid gap-2 col-12 mx-auto d-sm-block text-sm-end">\n                <button\n                  type="button" \n                  class="btn btn-outline-primary me-sm-2" \n                  data-bs-dismiss="modal" \n                  data-cookie-button-function="accept-all-cookies"\n                  ${g?`aria-label="${l}"`:""}\n                >\n                  ${c}\n                </button>\n\n                <button\n                  type="button" \n                  class="btn btn-outline-primary me-sm-2" \n                  data-bs-dismiss="modal" \n                  data-cookie-button-function="reject-all-cookies"\n                  ${m?`aria-label="${u}"`:""}\n                >\n                  ${d}\n                </button>\n                \n                <button\n                  type="button" \n                  class="btn btn-primary" \n                  data-bs-dismiss="modal" \n                  data-cookie-button-function="save-cookies"\n                  ${b?`aria-label="${p}"`:""}\n                >\n                  ${h}\n                </button>\n              </div>\n            </div> \x3c!-- .modal-footer --\x3e\n          </div>\n        </div>\n      </div>\n    `,this.modal}showModal(){const e=this.getConfigs(),{modalId:t}=e||{};this.modal=this.createModalHTML();const o=this.modal.querySelector('[data-cookie-button-function="accept-all-cookies"]'),n=this.modal.querySelector('[data-cookie-button-function="reject-all-cookies"]'),s=this.modal.querySelector('[data-cookie-button-function="save-cookies"]');o?.addEventListener("click",(()=>this.handleAcceptAllButtonClick())),n?.addEventListener("click",(()=>this.handleRejectAllButtonClick())),s?.addEventListener("click",(()=>this.handleSaveButtonClick()));new bootstrap.Modal(this.modal.querySelector(`#${t}`)).show()}showToast(){const e=this.getConfigs(),{showToast:t,toastText:o,toastPosition:n,toastContainerId:s,toastId:a,toastBackgroundClass:i,toastShowCloseButton:r,toastEscapeHTML:c,toastAnimation:l,toastAutohide:d,toastDelay:u}=e||{};if(!t)return;let h="";switch(n){case"top-left":h="top-0 start-0";break;case"top-center":h="top-0 start-50 translate-middle-x";break;case"top-right":h="top-0 end-0";break;case"middle-left":h="top-50 start-0 translate-middle-y";break;case"middle-center":h="top-50 start-50 translate-middle";break;case"middle-right":h="top-50 end-0 translate-middle-y";break;case"bottom-left":h="bottom-0 start-0";break;case"bottom-center":h="bottom-0 start-50 translate-middle-x";break;case"bottom-right":h="bottom-0 end-0"}let p=document.getElementById(s);p||(p=document.createElement("div"),p.id=s,p.className=`toast-container position-fixed z-3 p-3 ${h}`,document.body.appendChild(p));const g=document.createElement("div");g.id=a,g.className="toast shadow-none",g.setAttribute("role","alert"),g.setAttribute("aria-live","assertive"),g.setAttribute("aria-atomic","true"),g.innerHTML=`\n    <div class="d-flex gap-1 rounded ${i}">\n      <div class="toast-body">${c?this.escapeHTML(o):o}</div>\n      ${r?'<button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>':""}\n    </div>\n  `,p.appendChild(g);new bootstrap.Toast(g,{animation:l,autohide:d,delay:u}).show(),g.addEventListener("hidden.bs.toast",(()=>{g.remove(),""===p.innerHTML&&p.remove()}))}bootstrapExists(){return"undefined"!=typeof bootstrap}pushToDataLayer(e){window.dataLayer=window.dataLayer||[],window.dataLayer.push(e)}gtag(){window.dataLayer=window.dataLayer||[],dataLayer.push(arguments)}escapeHTML(e){return e.replace(/[&<>'"]/g,(e=>({"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"}[e])))}enableScrollingOnBody(){document.body.classList.contains("overflow-hidden")&&document.body.classList.remove("overflow-hidden")}disableScrollingonBody(){const e=this.getConfigs(),{freezeScrollingOnBanner:t}=e||{};t&&document.body.classList.add("overflow-hidden")}getVersionFromLocalStorage(){const e=this.getVersionName();return localStorage.getItem(e)}verifyVersionFromLocalStorage(){const e=this.getVersion(),t=this.getVersionFromLocalStorage();return Number(t)===Number(e)}setVersion(){const e=this.getVersionName(),t=this.getVersion();localStorage.setItem(e,t)}getCookieConsentAcceptEventName(){const e=this.getConfigs(),{cookieConsentAcceptEventName:t}=e||{};return t||console.warn("cookieConsentAcceptEventName in getCookieConsentAcceptEventName is empty"),t}getCookieConsentRejectEventName(){const e=this.getConfigs(),{cookieConsentRejectEventName:t}=e||{};return t||console.warn("cookieConsentRejectEventName in getCookieConsentRejectEventName is empty"),t}fireCookieConsentUpdateEvent(){const e=this.getConfigs(),{cookieConsentUpdateEventName:t}=e||{};t?this.pushToDataLayer({event:t}):console.warn("cookieConsentUpdateEventName in fireCookieConsentUpdateEvent is empty. No event pushed to dataLayer")}fireCookieConsentIndividualEvents(){const e=this.getConsentTypePrefix();this.getEnabledConsentTypes().forEach((t=>{const o=e+t.id,n=this.getCookieConsentAcceptEventName(),s=this.getCookieConsentRejectEventName(),a=this.getPositiveValue(),i=localStorage.getItem(o)===a?n:s;this.pushToDataLayer({event:i+"_"+t?.id})}))}setConsent_default(){this.gtag("consent","default",{functionality_storage:"granted",security_storage:"granted",analytics_storage:"denied",ad_storage:"denied",ad_user_data:"denied",ad_personalization:"denied",personalization_storage:"denied"})}updateConsent_allGranted(){this.gtag("consent","update",{ad_personalization:"granted",ad_storage:"granted",ad_user_data:"granted",analytics_storage:"granted",functionality_storage:"granted",personalization_storage:"granted",security_storage:"granted"})}updateConsent_allDenied(){this.gtag("consent","update",{ad_personalization:"denied",ad_storage:"denied",ad_user_data:"denied",analytics_storage:"denied",functionality_storage:"granted",personalization_storage:"denied",security_storage:"granted"})}updateConsent_fromLocalStorage(){const e=this.getConsentTypePrefix(),t=this.getEnabledConsentTypes(),o={},n=this.getPositiveValue();t.forEach((t=>{const s=e+t.id;switch(t.permissionType){case"ad":o.ad_personalization=localStorage.getItem(s)===n?"granted":"denied",o.ad_storage=localStorage.getItem(s)===n?"granted":"denied",o.ad_user_data=localStorage.getItem(s)===n?"granted":"denied";break;case"analytics":o.analytics_storage=localStorage.getItem(s)===n?"granted":"denied";break;case"functionality":o.functionality_storage=localStorage.getItem(s)===n?"granted":"denied";break;case"personalization":o.personalization_storage=localStorage.getItem(s)===n?"granted":"denied";break;case"security":o.security_storage=localStorage.getItem(s)===n?"granted":"denied"}})),this.gtag("consent","update",o)}handleAcceptAllButtonClick(){try{this.setConsent_acceptAll(),this.banner&&(this.banner.remove(),this.banner=null),this.updateConsent_allGranted(),this.fireCookieConsentUpdateEvent(),this.fireCookieConsentIndividualEvents(),this.showToast(),this.enableScrollingOnBody()}catch(e){console.error("There was an error with handleAcceptAllButtonClick()"),console.error(e)}}handleRejectAllButtonClick(){try{this.setConsent_rejectAll(),this.banner&&(this.banner.remove(),this.banner=null),this.updateConsent_allDenied(),this.fireCookieConsentUpdateEvent(),this.fireCookieConsentIndividualEvents(),this.showToast(),this.enableScrollingOnBody()}catch(e){console.error("There was an error with handleRejectAllButtonClick()"),console.error(e)}}handleSaveButtonClick(){try{this.setConsent_saveCustomized(),this.updateConsent_fromLocalStorage(),this.fireCookieConsentUpdateEvent(),this.fireCookieConsentIndividualEvents(),this.showToast(),this.enableScrollingOnBody()}catch(e){console.error("There was an error with handleSaveButtonClick()"),console.error(e)}}handleCustomizeButtonClick(){try{this.banner&&(this.banner.remove(),this.banner=null),this.showModal()}catch(e){console.error("There was an issue with callback function of handleCustomizeButtonClick()"),console.error(e)}}}
